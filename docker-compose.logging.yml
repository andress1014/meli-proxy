# Configuración con logs completos usando Loki
version: '3.8'

services:
  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "8081:8081"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - proxy1
      - proxy2
      - proxy3
      - proxy4
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      logging: "promtail"

  # 4 instancias del proxy optimizado
  proxy1:
    image: meli-proxy-optimized
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info  # Cambiado a info para más logs
      - METRICS_PORT=9090
      - SERVER_PORT=8080
      - GOMAXPROCS=2
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      logging: "promtail"
      service: "meli-proxy"
      instance: "proxy1"

  proxy2:
    image: meli-proxy-optimized
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info  # Cambiado a info para más logs
      - METRICS_PORT=9090
      - SERVER_PORT=8080
      - GOMAXPROCS=2
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      logging: "promtail"
      service: "meli-proxy"
      instance: "proxy2"

  proxy3:
    image: meli-proxy-optimized
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info  # Cambiado a info para más logs
      - METRICS_PORT=9090
      - SERVER_PORT=8080
      - GOMAXPROCS=2
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      logging: "promtail"
      service: "meli-proxy"
      instance: "proxy3"

  proxy4:
    image: meli-proxy-optimized
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info  # Cambiado a info para más logs
      - METRICS_PORT=9090
      - SERVER_PORT=8080
      - GOMAXPROCS=2
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      logging: "promtail"
      service: "meli-proxy"
      instance: "proxy4"

  # Redis optimizado
  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      logging: "promtail"

  # Loki para almacenar logs
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    restart: unless-stopped

  # Promtail para recopilar logs
  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped

  # Grafana para visualización de métricas y logs
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=ngalert
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
    restart: unless-stopped

volumes:
  redis-data:
  grafana-data:
  loki-data:
